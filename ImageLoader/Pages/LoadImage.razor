@page "/imageloader"

@using ImageLoader.Data
@inject FileSystemService fileSystemService

<h3>Image loader</h3>


<InputFile OnChange="@LoadFiles" multiple />

<table class="table">
    <thead>
        <tr>
            <th>Filename</th>
            <th>Load</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var name in names)
        {
            <tr>
                <td>@name</td>
                <td><button @onclick="() => Download(name)">Load</button></td>
            </tr>   
        }
    </tbody>
</table>

<p>@fileName</p>
<img src="@path" width="1000"/>

@code {
    string? path;
    string? fileName;
    List<string> names = new List<string>();
    List<IBrowserFile> _loadedFiles = new();

    protected override void OnInitialized()
    {
        LoadNames();
    }

    private void LoadNames()
    {
        names = fileSystemService.GetNamesOfImages();
    }

    private void Download(string name)
    {
        path = fileSystemService.DownloadToLocal(name);
    } 

    private async Task LoadFiles(InputFileChangeEventArgs e)
    {
        _loadedFiles.Clear();
        foreach (var file in e.GetMultipleFiles(e.FileCount))
        {
            _loadedFiles.Add(file);
            Stream stream = file.OpenReadStream();
            await fileSystemService.UploadImageToDbAsync(stream, file.Name);
            stream.Dispose();
        }
        LoadNames();
    }  
}
